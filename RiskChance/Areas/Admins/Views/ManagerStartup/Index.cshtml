@{
    ViewData["Title"] = "Manage Startup";
}

@section Styles {
    <style>
        .search-box {
            display: flex;
            align-items: center;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 5px 10px;
            width: 300px;
            margin-top: 15px;
            margin-right: 15px;
            background: white;
        }

            .search-box input {
                border: none;
                outline: none;
                width: 100%;
                padding: 5px;
            }

            .search-box i {
                color: #007bff;
            }

        /* Bảng dữ liệu */
        .table-custom {
            width: 100%;
            border-collapse: collapse;
        }

            .table-custom th, .table-custom td {
                padding: 8px;
                text-align: left;
                border-bottom: 1px solid #ddd;
            }

            .table-custom thead {
                background-color: #f8f9fa;
            }

            .table-custom tbody tr:hover {
                background-color: #f1f1f1;
            }
    </style>
}


@using RiskChance.Models;

@model IEnumerable<RiskChance.Models.Startup>

<div class="container">
    @* Cac tac vu *@
    <div class="mt-3 mb-3 d-flex align-items-center justify-content-around">
        <button class="btn btn-success fw-bold" onclick="bulkUpdateStatus()">Change Status Startup</button>

        <form asp-area="Admins" asp-controller="ManagerStartup" asp-action="SearchStartup" method="get" class="search-box">
            <i class="fa fa-search"></i>
            <input name="keyword" type="text" placeholder="Tìm lĩnh vực..." />
        </form>
    </div>

    <div class="table-responsive">
        <table class="table-custom">
            <thead>
                <tr>
                    <th class="checkbox-column"><input type="checkbox" id="selectAllCheckbox"></th>
                    <th class="id-column">ID</th>
                    <th>Name Startup</th>
                    <th>Business</th>
                    <th class="image-column">Logo</th>
                    <th class="date-column">Target</th>
                    <th>Status</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="startupTable">
                @foreach (var startup in Model)
                {
                    <tr id="row-@startup.IDStartup">
                        <td class="checkbox-column"><input type="checkbox"></td>
                        <td class="id-column">@startup.IDStartup</td>
                        <td>@startup.TenStartup</td>
                        <td>@startup.LinhVuc?.TenLinhVuc</td>
                        <td class="image-column"><img src="@startup.LogoUrl" alt="Startup A" width="50" height="50" class="rounded-circle" style="object-fit: contain"></td>
                        <td>@startup.MucTieu.ToString("N0")</td>
                        <td>
                            <button class="btn @(startup.TrangThaiXetDuyet == TrangThaiXetDuyetEnum.ChoDuyet ? "btn-warning":
                                                startup.TrangThaiXetDuyet == TrangThaiXetDuyetEnum.DaDuyet ? "btn-success" : "btn-danger") btn-sm status-btn text-white fw-bold"
                                    data-id="@startup.IDStartup"
                                    data-status="@((int)startup.TrangThaiXetDuyet)"
                                    onclick="updateStatus(this)">
                                @(startup.TrangThaiXetDuyet == TrangThaiXetDuyetEnum.ChoDuyet ? "Waiting" :
                                    startup.TrangThaiXetDuyet == TrangThaiXetDuyetEnum.DaDuyet ? "Accept" : "Ddeny")
                            </button>
                        </td>
                        <td class="d-flex align-items-center justify-content-around text-center align-middle">
                            <a asp-area="" 
                                asp-controller="Startup" 
                                asp-action="Details"
                                asp-route-id="@startup.IDStartup"
                                class="btn btn-primary text-decoration none">
                                <i class="fa-solid fa-circle-info"></i>
                            </a>
                            <button class="btn btn-danger btn-sm delete-btn text-white" data-id="@startup.IDStartup" onclick="deleteStartup(this)">
                                <i class="fa-solid fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        // Kết nối SignalR
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/statusStartupHub")
            .build();

        // Sự kiện thay đổi trạng thái
        connection.on("ReceiveStatusUpdate", function (id, newStatus) {
            let button = document.querySelector(`button[data-id='${id}']`);
            if (button) {
                updateButtonUI(button, newStatus);
            }
        });

        // sự kiện nhận startup mới
        connection.on("ReceiveStartupAdd", function () {
            console.log("Nhận cập nhật từ SignalR, tải lại danh sách startup...");
            location.reload();
        });

        connection.start()
            .then(() => console.log("SignalR connected"))
            .catch(err => console.error("SignalR error:", err.toString()));

        // Gọi API để cập nhật trạng thái startup
        function updateStatus(button) {
            let id = button.dataset.id;

            $.post("/Admins/ManagerStartup/UpdateStatus", { id: id }, function (result) {
                if (result.success) {
                    updateButtonUI(button, result.newStatus);
                } else {
                    alert("Lỗi khi cập nhật trạng thái!");
                }
            }).fail(function () {
                alert("Lỗi kết nối đến server!");
            });
        }

        // Cập nhật UI của button theo trạng thái
        function updateButtonUI(button, newStatus) {
            button.dataset.status = newStatus;
            if (newStatus === 0) {
                button.textContent = "Update";
                button.className = "btn btn-warning btn-sm status-btn text-white fw-bold";
            } else if (newStatus === 1) {
                button.textContent = "Accept";
                button.className = "btn btn-success btn-sm status-btn text-white fw-bold";
            } else {
                button.textContent = "Deny";
                button.className = "btn btn-danger btn-sm status-btn text-white fw-bold";
            }
        }

        // Gọi API để xóa startup
        function deleteStartup(button) {
            let id = button.dataset.id;

            if (confirm("Bạn có chắc chắn muốn xóa startup này?")) {
                $.post("/Admins/ManagerStartup/DeleteStartup", { id: id }, function (result) {
                    if (result.success) {
                        document.getElementById("row-" + id).remove();
                    } else {
                        alert("Lỗi khi xóa startup!");
                    }
                }).fail(function () {
                    alert("Lỗi kết nối đến server!");
                });
            }
        }

        document.getElementById("selectAllCheckbox").addEventListener("change", function () {
            let checkboxes = document.querySelectorAll("#startupTable input[type='checkbox']");
            checkboxes.forEach(cb => cb.checked = this.checked);
        });

        function bulkUpdateStatus() {
            let selectedIds = [];
            document.querySelectorAll("#startupTable input[type='checkbox']:checked").forEach(cb => {
                let row = cb.closest("tr");
                if (row) {
                    let statusButton = row.querySelector(".status-btn");
                    if (statusButton) {
                        let id = statusButton.dataset.id;
                        selectedIds.push(id);
                    }
                }
            });

            if (selectedIds.length === 0) {
                alert("Choose at least one startup to approve");
                return;
            }

            fetch("/Admins/ManagerStartup/BulkUpdateStatus", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ ids: selectedIds })
            })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        // selectedIds.forEach(id => {
                        //     let button = document.querySelector(`button[data-id='${id}']`);
                        //     if (button) {
                        //         updateButtonUI(button, 1); // Cập nhật trạng thái thành "Đã duyệt"
                        //     }
                        // });
                        location.reload();
                        alert("Success approve startup have been choose");
                    } else {
                        alert("Have a problem when approve");
                    }
                })
                .catch(() => {
                    alert("Fail connect DB");
                });
        }
    </script>
}