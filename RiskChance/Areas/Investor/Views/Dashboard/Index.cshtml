@{
    Layout = "~/Areas/User/Views/Shared/_ProfileLayout.cshtml";
    ViewData["Title"] = "Dashboard";
}

<div class="mt-4 mb-3 container">
    <h1 class="h1 fw-bold mb-4 text-center">Dashboard</h1>

    <div class="row">
        <div class="col-md-6">
            <!-- Tổng tiền đầu tư -->
            <div class="">
                <div class="box mb-3 p-3">
                    <h5 class="h5 fw-bold">Total amount invested</h5>
                    <h6 class="h6" id="totalInvestment">0 VNĐ</h6>
                </div>
            </div>

            <!-- Tổng lợi nhuận dự kiến -->
            <div class="">
                <div class="ex-pro-box box p-3 mb-3">
                    <h5 class="h5 fw-bold">Expected profit</h5>
                    <h6 class="h6" id="expectedProfit">0 VNĐ</h6>
                </div>
            </div>
        </div>

        <!-- Biểu đồ tỷ lệ đầu tư -->
        <div class="col-md-6">
            <div class="box p-3 mb-3">
                <h5 class="h5 fw-bold text-center">Investment allocation</h5>
                <div class="box-body">
                    <!-- Se ve bieu do tron -->
                    <canvas id="investmentChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Danh sách khoản đầu tư -->
    <div class="startup-doc-box box container-fluid p-3">
        <h3 class="h3 fw-bold mt-4">List of Investments</h3>
        <hr />
        <section class="doc-list">
            <div class="row fw-bold">
                <p class="col-3">Startup</p>
                <p class="col-3">Investment amount</p>
                <p class="col-3">Expected return</p>
                <p class="col-2">Investment date</p>
                <p class="col-1"></p>
            </div>

            <!-- Thêm bằng vòng lặplặp -->
            <a href="#"
               class="doc-item row text-decoration-none align-items-center">
                <p class="col-3">Startup</p>
                <p class="col-3">Investment amount</p>
                <p class="col-3">Expected return</p>
                <p class="col-2">Investment date</p>

                <div class="col-1">
                    <div class="non-success-status"></div>
                </div>
            </a>
            <!--  -->
        </section>
    </div>

    <!-- <table class="table-hover table">
      <thead class="fw-bold">
        <tr>
          <th class="text-center">Startup</th>
          <th class="text-center">Investment amount</th>
          <th class="text-center">Investment date</th>
          <th class="text-center">Expected return</th>
          <th class="text-center">Status</th>
        </tr>
      </thead>
      <tbody id="investmentList">
        <tr>
          <th>Startup</th>
          <th>Investment amount</th>
          <th>Investment date</th>
          <th>Expected return</th>
          <th class="">
            <div
              class="d-flex justify-content-center aligin-items-center"
            >
              <div class="update-status"></div>
            </div>
          </th>
        </tr>
      </tbody>
    </table> -->
</div>

@section Scripts {
    <script>
        // Load Pie Chart - Số lượng Startup theo lĩnh vực
        async function loadLinhVucChart() {
            try {
                const response = await fetch('/Admins/Dashboard/GetStartupCountByLinhVuc');
                if (!response.ok) throw new Error('Lỗi khi tải dữ liệu lĩnh vực.');

                const data = await response.json();
                const labels = data.map(item => item.linhVuc);
                const counts = data.map(item => item.startupCount);

                const backgroundColors = ['#ff6384', '#36a2eb', '#ffcd56', '#4bc0c0', '#9966ff', '#ff9f40', '#c9cbcf'];

                const ctx = document.getElementById('startupLinhVucChart').getContext('2d');
                new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Số lượng Startup theo lĩnh vực',
                            data: counts,
                            backgroundColor: backgroundColors.slice(0, labels.length)
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: { position: 'right' },
                        }
                    }
                });
            } catch (error) {
                console.error(error);
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            loadStartupChart();
            loadLinhVucChart();
        });
    </script>
}