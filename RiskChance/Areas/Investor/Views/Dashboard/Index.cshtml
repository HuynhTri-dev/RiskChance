@{
    Layout = "~/Areas/User/Views/Shared/_ProfileLayout.cshtml";
    ViewData["Title"] = "Dashboard";
}

@section Styles {
    <style>
        #investmentChart {
            max-height: 100%; /* Giới hạn chiều cao tối đa */
            height: auto !important;
            display: block; /* Tránh bị kéo giãn */
        }
    </style>
}

@model RiskChance.Areas.Investor.Models.InvestorDashboardViewModel

<div class="mt-4 mb-3 container">
    <h1 class="h1 fw-bold mb-4 text-center">Dashboard</h1>

    <div class="row align-items-stretch">
        <!-- Cột bên trái -->
        <div class="col-md-5 d-flex flex-column h-100">
            <div class="box mb-3 p-3 flex-grow-1">
                <h5 class="h5 fw-bold">Total amount invested</h5>
                <h6 class="h6" id="totalInvestment">@Model.TotalInvestment.ToString("N0") VNĐ</h6>
            </div>

            <div class="box p-3 mb-3 flex-grow-1">
                <h5 class="h5 fw-bold">Expected profit</h5>
                <h6 class="h6" id="expectedProfit">@Model.ExpectProfit.ToString("N0") VNĐ</h6>
            </div>

            <div class="box p-3 mb-3 flex-grow-1">
                <h5 class="h5 fw-bold">Profit Received</h5>
                <h6 class="h6" id="profitReceived">@Model.ProfitReceived.ToString("N0") VNĐ</h6>
            </div>
        </div>

        <!-- Cột bên phải -->
        <div class="col-md-7 d-flex flex-column h-100">
            <div class="box p-3 mb-3 flex-grow-1">
                <h5 class="h5 fw-bold text-center">Investment allocation</h5>
                <div class="box-body d-flex justify-content-center align-items-center h-100">
                    <canvas id="investmentChart"></canvas>
                </div>
            </div>
        </div>
    </div>


    <!-- Danh sách khoản đầu tư -->
    <div class="startup-doc-box box container-fluid p-3">
        <h3 class="h3 fw-bold mt-4">List of Investments</h3>
        <hr />
        <section class="doc-list">
            <div class="row fw-bold">
                <p class="col-3">Startup</p>
                <p class="col-3">Investment amount</p>
                <p class="col-3">Expected return</p>
                <p class="col-2">Payment</p>
                <p class="col-1"></p>
            </div>

            @if (Model.HopDongDauTus != null && Model.HopDongDauTus.Any())
            {
                @await Html.PartialAsync("_ContractList", Model.HopDongDauTus)
            }
            else
            {
                <p class="text-muted mt-3 text-center">None Contract</p>
            }
        </section>
    </div>

</div>
 
 @section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
     <script>
         // Load Pie Chart - Số lượng Startup theo lĩnh vực
        async function percentInvest() {
             try {
                const response = await fetch('/Investor/Dashboard/PercentInvest');
                 if (!response.ok) throw new Error('Lỗi khi tải dữ liệu lĩnh vực.');

                 const data = await response.json();
                 console.log(data);
                const labels = data.map(item => item.startupName);
                const counts = data.map(item => item.totalInvested);

                 const backgroundColors = ['#ff6384', '#36a2eb', '#ffcd56', '#4bc0c0', '#9966ff', '#ff9f40', '#c9cbcf'];

                const ctx = document.getElementById('investmentChart').getContext('2d');
                 new Chart(ctx, {
                     type: 'pie',
                     data: {
                         labels: labels,
                         datasets: [{
                             label: 'Số lượng Startup theo lĩnh vực',
                             data: counts,
                             backgroundColor: backgroundColors.slice(0, labels.length)
                         }]
                     },
                     options: {
                         responsive: true,
                         plugins: {
                             legend: { position: 'right' },
                         }
                     }
                 });
             } catch (error) {
                 console.error(error);
             }
         }

         document.addEventListener("DOMContentLoaded", function () {
             percentInvest();
         });
     </script>
 }